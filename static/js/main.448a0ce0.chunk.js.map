{"version":3,"sources":["Header/Header.js","Navbar/Navbar.js","Card/Cardcomponent.js","Ingredients/Ingredients.js","Instructions/Instructions.js","Reactplayer/reactplayer.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","navBar","maxHeight","borderBottom","backgroundColor","headerTitle","height","width","textAlign","fontSize","fontFamily","Header","classes","Grid","container","xs","item","className","headerContainer","borderTop","fontWeight","color","Navbar","Typography","Link","rootContainer","padding","cardContainer","minHeight","justifyContent","rootCard","minWidth","maxWidth","boxShadow","media","paddingTop","margin","avatar","sourceLink","textDecoration","fontStyle","Cardcomponent","props","Card","CardHeader","Avatar","strMeal","title","cycleMethod","subheader","href","strSource","target","rel","CardMedia","image","strThumb","CardContent","variant","component","strTags","strCategory","strArea","IconButton","listContainer","border","overflow","ingredientTitle","ingredientList","listStyleType","paddingInlineStart","measurementList","Ingredients","newStrIngredientsList","newStrMeasurementList","Instructions","contianer","strInstructions","playerContainer","reactPLayer","Reactplayer","url","controls","playbackRate","App","state","isFetchingRecipe","strYoutube","ingredientArray","measurementArray","randomRecipe","bind","this","setState","fetch","method","headers","Accept","then","response","json","meals","strMealThumb","fetchRecipe","strIngredients","Object","keys","map","key","index","slice","filter","el","trim","ingredientsListItem","strMeasurements","element","measurementListItem","Container","appContainer","lg","Item","sectionTwo","buttonContainer","Button","onClick","endIcon","size","disabled","instructionsContainer","React","Component","withStyles","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.448a0ce0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    navBar: {\r\n        maxHeight: '63px',\r\n        borderBottom: '1px solid black',\r\n        backgroundColor: 'pink'\r\n    },\r\n    headerTitle: {\r\n        height: '100%',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        //importborder: '1px solid red',\r\n        fontSize: '8.199121522693996vw',\r\n        fontFamily: \"'Style Script', cursive\",\r\n    },\r\n})\r\n\r\nfunction Header() {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Grid container xs={12}>\r\n            <Grid item xs={12} className={ classes.headerTitle }>\r\n                Random Recipe\r\n            </Grid>\r\n            \r\n        </Grid>\r\n        \r\n    );\r\n\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Grid, Typography, Link } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    headerContainer: {\r\n        borderTop: '1px solid black',\r\n        borderBottom: '1px solid black',\r\n        textAlign: 'center'\r\n    },\r\n    headerTitle: {\r\n        fontWeight: '600',\r\n        fontFamily: \"'Quicksand', sans-serif\",\r\n        color: 'black',\r\n    },\r\n})\r\n\r\nfunction Navbar () {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid className={classes.headerContainer} container xs={12}>\r\n            <Grid item xs={12}>\r\n                <Typography>\r\n                    <Link className={classes.headerTitle}>\r\n                        Home\r\n                    </Link>\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport { Grid, Card, CardHeader, CardMedia, CardContent, Avatar, Link, Typography, IconButton } from '@material-ui/core';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles  ({\r\n    rootContainer: {\r\n        //border: '1px solid black',\r\n        padding: '2vw',\r\n        backgroundColor: '#fdf3f3',\r\n    },\r\n    cardContainer: {\r\n        //border: '1px dotted red',\r\n        minHeight: '330px',\r\n        padding: '10px',\r\n        justifyContent: 'center'\r\n    },\r\n    rootCard: {\r\n        minWidth: '320px',\r\n        maxWidth: '320px',\r\n        boxShadow: 'rgb(213, 210, 208) 5px 5px 15px, rgb(255, 255, 255) -5px -5px 15px',\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n        margin: '2px 20px',\r\n    },\r\n    avatar: {\r\n        backgroundColor: 'red',\r\n    }, \r\n    sourceLink: {\r\n        fontSize: '.8rem',\r\n        color: 'black',\r\n        textDecoration: 'none',\r\n        fontStyle: 'italic',\r\n    },\r\n})\r\n\r\nconst Cardcomponent = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.cardContainer}>\r\n            <Card className={classes.rootCard} >\r\n                <CardHeader \r\n                    avatar={\r\n                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                            {props.strMeal}\r\n                        </Avatar>\r\n                    }\r\n                    title={props.cycleMethod? 'Loading Recipe...': props.strMeal}\r\n                    subheader={<Link href={props.strSource} \r\n                                    target='_blank' \r\n                                    rel='noreferrer'>\r\n                                    <LinkIcon />\r\n                                </Link> }\r\n                                    />\r\n                \r\n                <CardMedia className={classes.media} image={props.strThumb} title='Random-recipe'/>\r\n\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {props.cycleMethod? 'Tags' : props.strTags + \" | \" + props.strCategory + \" | \" + props.strArea}\r\n                    </Typography>\r\n                </CardContent>\r\n                <IconButton aria-label=\"add to favorites\">\r\n                    <FavoriteBorderIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"share\">\r\n                    <ShareIcon />\r\n                </IconButton>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default Cardcomponent;","import React from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    listContainer: {\r\n        border: 'solid 1px black',\r\n        textAlign: 'center',\r\n        maxHeight: '100%',\r\n        overflow: 'scroll',\r\n    },\r\n   ingredientTitle: {\r\n        margin: '0',\r\n        fontSize: '1.5rem',\r\n    },\r\n    ingredientList: {\r\n        listStyleType: \"none\",\r\n        paddingInlineStart: '0',\r\n        fontSize: '.8rem'\r\n    },\r\n    measurementList: {\r\n        listStyleType: \"none\",\r\n        paddingInlineStart: '0',\r\n        fontSize: '.8rem'\r\n    },\r\n})\r\n\r\n\r\nconst Ingredients = (props) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        // < Grid container className={classes.listMainContainer} lg={6}>\r\n            <Grid container className={ classes.listContainer }>\r\n            \r\n                <Grid item xs={12} >\r\n                    <h1 className={classes.ingredientTitle}>Ingredients</h1>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                <ul className={classes.ingredientList}>\r\n                                {props.newStrIngredientsList}</ul>\r\n                </Grid>\r\n                <Grid item xs={6}> \r\n                <ul className={classes.measurementList}>\r\n                                {props.newStrMeasurementList}</ul>\r\n                </Grid>\r\n            \r\n            </Grid>\r\n        // </Grid>\r\n    )\r\n}\r\n\r\nexport default Ingredients;","import React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\nconst Instructions = (props) => {\r\n    return (\r\n        <Grid contianer>\r\n            <Typography>\r\n                <p>{props.strInstructions}</p>\r\n            </Typography>\r\n        </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default Instructions","import React from 'react';\r\nimport ReactPlayer from 'react-player/youtube';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    playerContainer: {\r\n        padding : '1px',\r\n        height: '42vh',\r\n        border: '1px solid black',\r\n        boxShadow: 'rgb(213, 210, 208) 5px 5px 15px, rgb(255, 255, 255) -5px -5px 15px',\r\n    },\r\n    reactPLayer: {\r\n        \r\n    },\r\n})\r\n\r\n\r\nconst Reactplayer = ({ url }) => {\r\n    \r\n    const classes = useStyles();\r\n\r\n        //const url = 'https://www.youtube.com/watch?v=Rq5SEhs9lws&t=622s';\r\n        return (\r\n            <Grid container className={classes.playerContainer}>\r\n                <ReactPlayer\r\n                \r\n                url = {url}\r\n                controls = 'true'\r\n                width = '100%'\r\n                height = '100%'\r\n                playbackRate = '1'\r\n                />\r\n            </Grid>\r\n        )\r\n    \r\n};\r\n\r\n\r\nexport default Reactplayer;","import React from 'react';\nimport './App.css';\n\nimport {withStyles, Container, Grid, Button  } from '@material-ui/core';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\n\nimport Header from './Header/Header';\nimport Navbar from './Navbar/Navbar';\nimport Cardcomponent from './Card/Cardcomponent';\nimport Ingredients from './Ingredients/Ingredients';\nimport Instructions from './Instructions/Instructions';\nimport Reactplayer from './Reactplayer/reactplayer';\n\nconst styles = theme => ({\n  appContainer: {\n    border: 'dotted 1px black',\n    backgroundColor: '#ECF0f3',\n  },\n  sectionTwo: {\n    margin: '10px 0',\n    border: 'dotted 1px black',\n    minHeight: '56vh',\n    overflow: 'hidden',\n  },\n  buttonContainer: {\n    textAlign: 'center',\n  },\n  instructionsContainer: {\n    minHeight: '20vh',\n  },\n});\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetchingRecipe: false,\n      strYoutube: null,\n      strMeal: null,\n      strSource: null,\n      strThumb: null,\n      strTags: null,\n      strCategory: null,\n      strArea: null,\n      ingredientArray: [],\n      measurementArray: [],\n      strInstructions: null,\n    };\n    this.randomRecipe = this.randomRecipe.bind(this);\n  };\n\n  componentDidMount () {\n    this.randomRecipe();\n  }\n\n  fetchRecipe () {\n    this.setState ({isFetchingRecipe: true});\n    fetch ('https://www.themealdb.com/api/json/v1/1/random.php', {\n      method: 'GET',\n        headers : {\n          Accept: \"application/json\",\n        }\n    })\n    .then (response => response.json ())\n    .then (json => {\n        this.setState ({\n          isFetchingRecipe: false,\n          strYoutube: json.meals[0].strYoutube,\n          strMeal: json.meals[0].strMeal,\n          strSource: json.meals[0].strSource,\n          strThumb: json.meals[0].strMealThumb,\n          strTags: json.meals[0].strTags,\n          strCategory: json.meals[0].strCategory,\n          strArea: json.meals[0].strArea,\n          ingredientArray: json.meals[0],\n          measurementArray: json.meals[0],\n          strInstructions: json.meals[0].strInstructions,\n        })\n        // let trialMeal = json.meals[0].strInstructions.replace(\"\\\\n\", \"\\n\");\n        //         console.clear();\n        //         console.log(trialMeal);\n    })\n  }\n\n  randomRecipe() {\n    this.fetchRecipe()\n  };\n\n  render () {\n\n// add ingredients list at ingredient component and a button component\n\n\n         //Map Ingredients\n         const strIngredients = this.state.ingredientArray;\n         const strIngredientsList = Object.keys(strIngredients)\n                                         .map(function(key, index) { return strIngredients[key] })\n                                         .slice(9,28);\n         const newStrIngredientsList = strIngredientsList.filter(function (el) { return el.trim(); })\n                                                         .map((item) => { return <li className={this.props.classes.ingredientsListItem}>{item}</li> });\n\n         //map Measurements\n         const strMeasurements = this.state.measurementArray;\n         const strMeasurementList = Object.keys(strMeasurements)\n                                         .map(function(key,index){ return strMeasurements[key] })\n                                         .slice(29, 48);\n\n        const newStrMeasurementList = strMeasurementList.filter(function (element) { return element.trim(); }).map((item) => <li className={this.props.classes.measurementListItem}>{item}</li>)\n\n        \n    return (\n      \n      <Container className={this.props.classes.appContainer} maxWidth='md'>\n      <Grid container lg={12}>\n        <Grid Item xs={12}><Header /></Grid>\n        <Grid Item xs={12}><Navbar /></Grid>\n        <Grid container xs={12} className={this.props.classes.sectionTwo}>\n          <Grid Item xs={12} lg={6}>\n              <Cardcomponent \n                cycleMethod={this.state.isFetchingRecipe} \n                strMeal={this.state.strMeal} \n                strThumb={this.state.strThumb}\n                strSource={this.state.strSource} \n                strTags={this.state.strTags}\n                strCategory={this.state.strCategory}\n                strArea={this.state.strArea}\n                />\n          <Grid item xs={12} className={this.props.classes.buttonContainer}>\n            <Button onClick={this.randomRecipe}\n              endIcon={<AutorenewIcon />} \n              className=\"myButton\"  \n              color=\"primary\" \n              variant='contained'\n              size='small'\n              disabled={this.state.isFetchingRecipe}>\n              Random Recipe\n            </Button>\n          </Grid>\n        </Grid>\n\n          \n\n          <Grid item xs={12} lg={6}>\n            <Ingredients newStrIngredientsList={newStrIngredientsList} newStrMeasurementList={newStrMeasurementList}/>\n          </Grid>\n        </Grid>\n          \n        <Grid Item className={this.props.classes.instructionsContainer} xs={12} lg={6}>\n          <Instructions strInstructions={this.state.strInstructions} />\n        </Grid>\n\n        <Grid item className={this.props.classes.reactPLayer} xs={12} lg={6}>\n          <Reactplayer url={this.state.strYoutube} />\n        </Grid>\n\n        </Grid>\n      </Container>\n    );\n  }\n}\nexport default withStyles(styles)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}